<project name="blackjack" default="build" basedir=".">
	<property name="app.name" value="blackjack"/>
	<property name="app.version" value="0.1"/>
	<property name="app.fullname" value="${app.name}-${app.version}"/>
	<property name="build.home" value="${basedir}/build"/>
	<property name="dist.home" value="${basedir}/dist"/>
	<property name="docs.home" value="${basedir}/docs"/>
	<property name="src.home" value="${basedir}/src"/>
	<property name="lib.home" value="${basedir}/lib"/>
	<property name="javac.version" value="1.8"/>
	<property name="javac.encoding" value="ISO-8859-1"/><!--
 ==================== Compile options =========================== 
--><property name="compile.debug" value="true"/><property name="compile.deprecation" value="false"/><property name="compile.optimize" value="true"/><!--
 ==================== Compilation Classpath =========================== 
--><path id="compile.classpath"><fileset dir="${lib.home}"><include name="**/*.jar"/></fileset><fileset dir="${dist.home}"><include name="**/*.jar"/></fileset></path><!--
 ==================== All Target ====================================== 
--><target name="build" depends="clean,dist" description="Clean build and dist directories, then compile"/><!--
 ==================== Clean Target ==================================== 
--><target name="clean" description="Delete old build, docs and dist directories"><delete dir="${build.home}"/><delete dir="${build.test.home}"/><delete dir="${dist.home}"/><delete dir="${docs.home}"/></target><!--
 ==================== Prepare Target ================================== 
--><target name="prepare"><mkdir dir="${build.home}"/><mkdir dir="${dist.home}"/></target><!--
 ==================== Compile Target ================================== 
--><target name="compile" depends="prepare" description="Compile Java sources"><javac srcdir="${src.home}" destdir="${build.home}" debug="${compile.debug}" deprecation="${compile.deprecation}" optimize="${compile.optimize}" source="${javac.version}" encoding="${javac.encoding}"><classpath refid="compile.classpath"/></javac><!-- Copy application resources --><copy todir="${build.home}"><fileset dir="${src.home}" excludes="**/*.java"/></copy></target><!--
 ==================== Dist Target ===================================== 
--><target name="dist" depends="clean,compile,javadoc" description="Create binary distribution"><!-- Create application JAR file --><jar jarfile="${dist.home}/${app.fullname}.jar" basedir="${build.home}"><manifest><attribute name="Main-Class" value="cartes.MainClass"/><!--
 <attribute name="Class-Path" value="xxxxx.jar" /> 
--></manifest></jar></target><!--
 ==================== Javadoc Target ================================== 
--><target name="javadoc" depends="compile" description="Create Javadoc API documentation"><mkdir dir="${docs.home}"/><javadoc sourcepath="${src.home}" destdir="${docs.home}" packagenames="*"><classpath><fileset dir="${lib.home}"><include name="**/*.jar"/></fileset></classpath></javadoc></target><!--
 ==================== Run Target ================================== 
--><target name="run" depends="dist"><java jar="${dist.home}/${app.fullname}.jar" fork="true"/></target></project>